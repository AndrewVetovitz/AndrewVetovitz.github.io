{
  "_args": [
    [
      {
        "raw": "ngx-scrollspy",
        "scope": null,
        "escapedName": "ngx-scrollspy",
        "name": "ngx-scrollspy",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/andrew/PersonalWebsite/frontend"
    ]
  ],
  "_from": "ngx-scrollspy@latest",
  "_id": "ngx-scrollspy@1.2.0",
  "_inCache": true,
  "_location": "/ngx-scrollspy",
  "_nodeVersion": "9.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ngx-scrollspy-1.2.0.tgz_1509649859961_0.6092628671322018"
  },
  "_npmUser": {
    "name": "jonnybgod",
    "email": "jonnybgod@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngx-scrollspy",
    "scope": null,
    "escapedName": "ngx-scrollspy",
    "name": "ngx-scrollspy",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-scrollspy/-/ngx-scrollspy-1.2.0.tgz",
  "_shasum": "3832a8db73b91cf36d9ab39fbda1fc4ceffe0fb6",
  "_shrinkwrap": null,
  "_spec": "ngx-scrollspy",
  "_where": "/home/andrew/PersonalWebsite/frontend",
  "author": {
    "name": "JoÃ£o Ribeiro",
    "email": "jonnybgod@gmail.com",
    "url": "http://github.com/JonnyBGod"
  },
  "bugs": {
    "url": "http://github.com/jonnybgod/ngx-scrollspy/issues"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "description": "Angular ScrollSpy Service",
  "devDependencies": {
    "@angular/common": "^5.0.0",
    "@angular/compiler": "^5.0.0",
    "@angular/compiler-cli": "^5.0.0",
    "@angular/core": "^5.0.0",
    "@angular/platform-browser": "^5.0.0",
    "@angular/platform-browser-dynamic": "^5.0.0",
    "@angular/router": "^5.0.0",
    "@types/core-js": "^0.9.41",
    "@types/jasmine": "^2.5.47",
    "@types/node": "^8.0.47",
    "awesome-typescript-loader": "^3.3.0",
    "codelyzer": "^4.0.0",
    "commitizen": "^2.9.6",
    "concurrently": "^3.4.0",
    "core-js": "^2.4.1",
    "cz-conventional-changelog": "^2.0.0",
    "istanbul-instrumenter-loader": "0.2.0",
    "jasmine-core": "^2.5.1",
    "karma": "^1.6.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-coveralls": "^1.1.2",
    "karma-jasmine": "^1.1.0",
    "karma-mocha-reporter": "^2.2.3",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.3",
    "ng-packagr": "^1.5.0-rc.1",
    "reflect-metadata": "^0.1.10",
    "rimraf": "^2.6.1",
    "rxjs": "^5.3.0",
    "semantic-release": "^8.2.0",
    "source-map-loader": "^0.2.1",
    "systemjs": "^0.20.12",
    "ts-helpers": "^1.1.1",
    "tslint": "^5.1.0",
    "tslint-loader": "^3.5.2",
    "typescript": "^2.4.0",
    "webpack": "^3.8.1",
    "zone.js": "^0.8.5"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-D9cDJFLx4/bCWD/rHtggIBn6XYBJ3fjHpWpjFOVM6W97Ikvd5WDwW/pTxlOo/fQUTzNWzhkO6wV5ewAziU3obw==",
    "shasum": "3832a8db73b91cf36d9ab39fbda1fc4ceffe0fb6",
    "tarball": "https://registry.npmjs.org/ngx-scrollspy/-/ngx-scrollspy-1.2.0.tgz"
  },
  "engines": {
    "node": ">=6.9.0"
  },
  "es2015": "ngx-scrollspy.js",
  "homepage": "https://github.com/jonnybgod/ngx-scrollspy#readme",
  "keywords": [
    "angular2",
    "ng2",
    "angular",
    "scrollspy",
    "scroll",
    "spy",
    "index",
    "parallax",
    "infinite",
    "infinite-scroll",
    "affix",
    "effect"
  ],
  "license": "MIT",
  "main": "bundles/ngx-scrollspy.umd.js",
  "maintainers": [
    {
      "name": "jonnybgod",
      "email": "jonnybgod@gmail.com"
    }
  ],
  "metadata": "ngx-scrollspy.metadata.json",
  "module": "ngx-scrollspy.es5.js",
  "name": "ngx-scrollspy",
  "optionalDependencies": {},
  "readme": "[![npm version](https://img.shields.io/npm/v/ngx-scrollspy.svg?style=flat)](https://www.npmjs.com/package/ngx-scrollspy)\n[![Build Status](https://img.shields.io/travis/JonnyBGod/ngx-scrollspy/master.svg?style=flat)](https://travis-ci.org/JonnyBGod/ngx-scrollspy)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/fc203d3b26f745b4af0251228dde6b2e)](https://www.codacy.com/app/jonnybgod/ngx-scrollspy?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=JonnyBGod/ngx-scrollspy&amp;utm_campaign=Badge_Grade)\n[![Coverage Status](https://coveralls.io/repos/github/JonnyBGod/ngx-scrollspy/badge.svg?branch=master)](https://coveralls.io/github/JonnyBGod/ngx-scrollspy?branch=master)\n[![devDependency Status](https://david-dm.org/JonnyBGod/ngx-scrollspy/dev-status.svg)](https://david-dm.org/JonnyBGod/ngx-scrollspy#info=devDependencies)\n\n[![NPM downloads](https://img.shields.io/npm/dm/ngx-scrollspy.svg)](https://npmjs.org/package/ngx-scrollspy)\n\nYou can use this angular2 service to spy scroll events from ```window``` or any other scrollable element.\n\nThis library implements an service to collect observables from scroll spy directives. It can be used to create you own components or if you prefer use on of the following components that leverage this library functionality to accomplish different behaviors:\n\n* **index**: create and display and index from content inside and element.\n* **affix**: make element follow scroll inside its parent.\n* **parallax**: create very simple parallax effects based on scroll.\n* **infinite**: infinite scroll\n\n# Repository change\n\nPlease not that the repository and npm package changed from *ng2-scrollspy* to *ngx-scrollspy*\n\n## Installation\nFirst you need to install the npm module:\n```sh\nnpm install ngx-scrollspy --save\n```\n\nIf you use SystemJS to load your files, you might have to update your config with this if you don't use `defaultJSExtensions: true`:\n```js\nSystem.config({\n\tpackages: {\n\t\t\"ngx-scrollspy\": {\"defaultExtension\": \"js\"}\n\t}\n});\n```\n\nFinally, you can use ngx-scrollspy in your Angular 2 project.\nIt is recommended to instantiate `ScrollSpyService` in the bootstrap of your application and to never add it to the \"providers\" property of your components, this way you will keep it as a singleton.\nIf you add it to the \"providers\" property of a component it will instantiate a new instance of the service that won't be initialized.\n\n```js\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ScrollSpyModule } from 'ngx-scrollspy';\n\n@NgModule({\n  imports: [\n  \tBrowserModule,\n  \tScrollSpyModule.forRoot()\n  ],\n  declarations: [ AppComponent ], \n  bootstrap: [ AppComponent ]\n})\n```\n\n## Using\n\n#### Spy window scroll\n\nUse ```ScrollSpyDirective``` to spy on window.\n\n```js\nimport { NgModule, Component, Injectable, AfterViewInit } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ScrollSpyModule, ScrollSpyService } from 'ngx-scrollspy';\n\n@Injectable()\n@Component({\n\tselector: 'app',\n\ttemplate: `<div scrollSpy></div>`\n})\nexport class AppComponent implements AfterViewInit {\n\tconstructor(private scrollSpyService: ScrollSpyService) {}\n\n\tngAfterViewInit() {\n\t\tthis.scrollSpyService.getObservable('window').subscribe((e: any) => {\n\t\t\tconsole.log('ScrollSpy::window: ', e);\n\t\t});\n\t}\n}\n\n@NgModule({\n  imports: [\n  \tBrowserModule,\n  \tScrollSpyModule.forRoot()\n  ],\n  declarations: [\n  \tAppComponent\n  ], \n  bootstrap: [ AppComponent ]\n})\n```\n\n#### Spy any element scroll\n\nUse ```ScrollSpyElementDirective``` to spy on any element. You must give an unique id to each instance.\n\n```js\nimport { NgModule, Component, Injectable, AfterViewInit } from '@angular/core';\nimport { ScrollSpyModule, ScrollSpyService } from 'ngx-scrollspy';\n\n@Injectable()\n@Component({\n\tselector: 'yourComponent',\n\ttemplate: `\n\t<div scrollSpyElement=\"test\" style=\"max-height: 100px; overflow: auto;\">\n\t\t<div style=\"height: 500px;\"></div>\n\t</div>`\n})\nexport class YourComponent implements AfterViewInit {\n\n\tconstructor(private scrollSpyService: ScrollSpyService) {}\n\n\tngAfterViewInit() {\n\t\tthis.scrollSpyService.getObservable('test').subscribe((e: any) => {\n\t\t\tconsole.log('ScrollSpy::test: ', e);\n\t\t});\n\t}\n}\n\n@NgModule({\n  imports: [\n\t\tScrollSpyModule\n  ],\n  declarations: [\n  \tAppComponent\n  ], \n  providers: [ ] \n})\nexport class YourModule { }\n```\n\nBecause ```ScrollSpyService``` is a singleton, you can get any ScrollSpy observable from anywhere withing your application.\n\n# TODO:\n\n* Documentation/examples webpage\n* Finish unit tests\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonnybgod/ngx-scrollspy.git"
  },
  "scripts": {
    "build": "ng-packagr -p ng-package.json",
    "clean": "npm cache clean && npm run rimraf -- node_modules dist coverage",
    "clean:install": "npm set progress=false && npm i",
    "commit": "git-cz",
    "lint": "tslint ./src/{,*/}*.ts",
    "prebuild": "npm run rimraf -- dist",
    "preclean:install": "npm run clean",
    "pretest": "npm run rimraf -- dist coverage",
    "rimraf": "rimraf",
    "semantic-release": "semantic-release pre && npm run build && npm publish dist && semantic-release post",
    "test": "karma start",
    "test-watch": "karma start --singleRun=false --autoWatch=true"
  },
  "typings": "ngx-scrollspy.d.ts",
  "version": "1.2.0"
}
